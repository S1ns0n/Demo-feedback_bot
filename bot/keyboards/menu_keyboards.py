from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import os
import json
from bot.config import SCENARIOS_DIR


def create_menu_scenarios_list_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    –ö–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
        if not os.path.exists(SCENARIOS_DIR):
            os.makedirs(SCENARIOS_DIR)
            return InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="‚ùå –ù–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", callback_data="no_scenarios")
            ]])

        files = os.listdir(SCENARIOS_DIR)
        json_files = [f for f in files if f.endswith('.json')]

        if not json_files:
            return InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="‚ùå –ù–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", callback_data="no_scenarios")
            ]])

        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
        scenarios_data = []

        for file in json_files:
            scenario_name = file.replace('.json', '')
            file_path = os.path.join(SCENARIOS_DIR, file)

            try:
                # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ 'name'
                with open(file_path, 'r', encoding='utf-8') as f:
                    scenario_data = json.load(f)

                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–µ 'name' –∏–∑ JSON, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                display_name = scenario_data.get('name', scenario_name)

                # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
                if len(display_name) > 30:
                    display_name = display_name[:27] + "..."

            except (json.JSONDecodeError, KeyError, Exception) as e:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å JSON, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
                print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è {file}: {e}")
                display_name = scenario_name
                if len(display_name) > 30:
                    display_name = display_name[:27] + "..."

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
            scenarios_data.append({
                'file_name': scenario_name,
                'display_name': display_name
            })

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É –ø–æ display_name
        scenarios_data.sort(key=lambda x: x['display_name'].lower())

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ (–ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥)
        rows = []
        for scenario in scenarios_data:
            rows.append([
                InlineKeyboardButton(
                    text=f"üìÑ {scenario['display_name']}",
                    callback_data=f"start_scenario_{scenario['file_name']}"
                )
            ])

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
        rows.append([
            InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data="refresh_scenarios")
        ])

        return InlineKeyboardMarkup(inline_keyboard=rows)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: {e}")
        return InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text="‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏", callback_data="error_scenarios")
        ]])